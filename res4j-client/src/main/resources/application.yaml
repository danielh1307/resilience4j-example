resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true # metrics are published on /health endpoint
      failureRateThreshold: 50 # in percentage - if number of failed calls exceeds this threshold, the circuit changes to OPEN
      slidingWindowSize: 5
      waitDurationInOpenState: 20000 # in milliseconds - after this time, state changes from OPEN to HALF_OPEN
      slowCallDurationThreshold: 5000 # in milliseconds - if the call lasts longer, it is considered to be slow
      slowCallRateThreshold: 50 # in percentage - if number of slow calls exceeds this threshold, the circuit changes to OPEN
      automaticTransitionFromOpenToHalfOpenEnabled: true
      recordExceptions: danielh1307.res4jclient.ctrl.GenericServiceException
      ignoreExceptions: org.springframework.web.client.HttpClientErrorException
    restricted:
      registerHealthIndicator: true
      failureRateThreshold: 10
      slidingWindowSize: 5
      slowCallDurationThreshold: 1000
      slowCallRateThreshold: 50
  backends:
    backendA:
      baseConfig: default
    backendB:
      baseConfig: restricted

resilience4j.retry:
  backends:
    backendA:
      maxRetryAttempts: 4
      waitDuration: 1500
      retryExceptions: org.springframework.web.client.HttpServerErrorException,java.io.IOException,java.net.ConnectException,org.springframework.web.client.ResourceAccessException,java.lang.RuntimeException
      ignoreExceptions: org.springframework.web.client.HttpClientErrorException,danielh1307.res4jclient.ctrl.TimeoutException

management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: true

management.endpoints.web.exposure.include: health,circuitbreakers,metrics
management.endpoint.health.show-details: always

